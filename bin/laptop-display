#!/bin/sh -eu
#
# Uses external display if connected; or internal display otherwise.
#
# Written in 2014 by Suraj N. Kurapati <https://github.com/sunaku>

# detect and register active displays as variables in this script
eval $(xrandr --verbose | awk '
  $2 ~ /connected/ {
    device = $1
    gsub("-", "", $1)
    display = $1
    print display "=" device
    print display "_connected=" ($2 == "connected")
    all_displays = display " " all_displays
  }
  $1 ~ /^[[:digit:]]+x[[:digit:]]+/ {
    if ($NF == "*current") {
      print display "_active=1"
      print display "_size=" $1
    }
    if ($NF == "+preferred") {
      print display "_preferred_size=" $1
    }
    if (!max_resolution[display]) {
      max_resolution[display] = $1
      print display "_max_resolution=" $1
    }
  }
  END {
    print "all_displays=\"" all_displays "\""
  }
')

try_switching_to_external_display() {
  display=$1
  shift

  eval "connected=\$${display}_connected"

  if test "$connected" = 1; then
    eval "device=\$${display}"
    eval "max_resolution=\$${display}_max_resolution"

    # switch off internal display and use external one
    xrandr "$@" --output "$eDP" --off \
      --output "$device" --mode "$max_resolution"
  else
    false
  fi
}

for display in $all_displays; do
  if try_switching_to_external_display $display "$@"; then
    break
  fi
done

if test $display = eDP; then # no external displays
  laptop-scaling 1.25

  # reduce brightness of internal display backlight
  xbacklight | grep -q -x 100 && xbacklight = 15
  xgamma -gamma 0.85

else # successfully connected to an external display
  laptop-scaling 1.375

  # reduce brightness of external display backlight
  # (similar to HDMI Black Level monitor adjustment)
  xgamma -gamma 0.75
fi
